<?xml version="1.0" encoding="utf-8" ?>
<!--
  TODO:
  * rajouter aux package les scripts de déploiement
  * encrypter les chaînes de connection
  * compilation pour de multiples plateformes ?
  * RestorePackages ?
  * IISExpress, configSource
 -->

<Project ToolsVersion="4.0" DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project=".\Chiffon.common.targets" />

  <PropertyGroup>
    <!-- Valeurs possibles : Major, Minor, Patch, Build. -->
    <Milestone Condition="'$(Milestone)' == ''">Build</Milestone>

    <!-- Valeurs possibles : Production, Integration. -->
    <PackageTarget Condition="'$(PackageTarget)' == ''">Production</PackageTarget>

    <PackageAssets Condition="'$(PackageAssets)' != 'false'">true</PackageAssets>
    <PackageMediaSite Condition="'$(PackageMediaSite)' != 'false'">true</PackageMediaSite>
    <PackageWebSite Condition="'$(PackageWebSite)' != 'false'">true</PackageWebSite>
  </PropertyGroup>

  <PropertyGroup>
    <PublishProperties>
      $(BuildProperties);
      TransformsDir=$(_TransformsDir);
      PackageTarget=$(PackageTarget);
      <!-- Configuration de MSBuild. -->
      DeployOnBuild=true;
      <!-- On force la valeur de "VisualStudioVersion",
           sinon MSBuild refuse de publier le projet. -->
      VisualStudioVersion=11.0;

      <!-- Configuration commune à tous les profils. -->
      WebPublishMethod=FileSystem;
      DebugSymbols=true;
      DeleteAppCodeCompiledFiles=true;
      DeleteExistingFiles=true;
      DeployTarget=WebPublish;
      EnableUpdateable=false;
      ExcludeApp_Data=true;
      <!-- On garde les fichiers debug liés aux autres assemblées. -->
      ExcludeGeneratedDebugSymbol=false;
      PrecompileBeforePublish=true;
      UseMerge=true;
      WDPMergeOption=MergeAllOutputsToASingleAssembly
    </PublishProperties>
  </PropertyGroup>

  <ItemGroup>
    <!--
    <ProjectsToBuild Include="$(_SourceDir)Chiffon.WebSite\assets\Chiffon.Assets.proj"
                     Condition="'$(PackageAssets)' == 'true'">
      <AdditionalProperties>
        $(BuildProperties);
        DeployOnBuild=true;
        PublishUrl=$(_StageDir)wznw.org_chiffon\
      </AdditionalProperties>
    </ProjectsToBuild>
    -->

    <ProjectsToBuild Include="$(_SourceDir)Wznw.Org\Wznw.Org.csproj"
                     Condition="'$(PackageAssets)' == 'true'">
      <AdditionalProperties>
        $(PublishProperties);
        PublishUrl=$(_StageDir)wznw.org\;
        PublishProfile=$(_PublishProfileDir)Wznw.Org.pubxml
      </AdditionalProperties>
    </ProjectsToBuild>

    <ProjectsToBuild Include="$(_SourceDir)Chiffon.WebSite\Chiffon.WebSite.csproj"
                     Condition="'$(PackageWebSite)' == 'true'">
      <AdditionalProperties>
        $(PublishProperties);
        PublishUrl=$(_StageDir)pourquelmotifsimone.com\;
        PublishProfile=$(_PublishProfileDir)Chiffon.WebSite.pubxml
      </AdditionalProperties>
    </ProjectsToBuild>

    <ProjectsToBuild Include="$(_SourceDir)Chiffon.MediaSite\Chiffon.MediaSite.csproj"
                     Condition="'$(PackageMediaSite)' == 'true'">
      <AdditionalProperties>
        $(PublishProperties);
        PublishUrl=$(_StageDir)s.pourquelmotifsimone.com\;
        PublishProfile=$(_PublishProfileDir)Chiffon.MediaSite.pubxml
      </AdditionalProperties>
    </ProjectsToBuild>

    <ProjectsToBuild Include="$(_TestDir)Chiffon.Tests\Chiffon.Tests.csproj"
                     Condition="'$(RunTests)' == 'true'">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
  </ItemGroup>

  <Target Name="Clean" DependsOnTargets="DeleteBuildDir">
    <MSBuild Projects="$(_SourceDir)Chiffon.WebSite\assets\Chiffon.Assets.proj" Targets="DeepClean" />
  </Target>

  <Target Name="Build">
    <MSBuild Projects="@(ProjectsToBuild)" Targets="Build" StopOnFirstFailure="true">
      <Output ItemName="_BuildOutputs" TaskParameter="TargetOutputs" />
    </MSBuild>
  </Target>
  <Target Name="AfterBuild" AfterTargets="Build" DependsOnTargets="$(AfterBuildDependsOn)" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <Target Name="Milestone" DependsOnTargets="_ValidateMilestone;UpdateVersionNumber" />

  <Target Name="Package" DependsOnTargets="UpdateVersionNumber;Rebuild;_ZipPackage" />

  <!--
  <Target Name="Integrate" DependsOnTargets="_PreIntegrate;Package" />
  -->

  <ItemGroup>
    <_AfterBuildTargets Include="VerifyBuildOutputs" Condition="'$(Analyze)' == 'true'" />
    <_AfterBuildTargets Include="VerifyAspNetMergeOutputs" Condition="'$(Analyze)' == 'true'" />
    <_AfterBuildTargets Include="RunXunitTests" Condition="'$(RunTests)' == 'true'" />
  </ItemGroup>

  <PropertyGroup>
    <AfterBuildDependsOn>@(_AfterBuildTargets)</AfterBuildDependsOn>
  </PropertyGroup>

  <Target Name="_ValidateMilestone">
    <!-- Lors de la création d'un package, "Milestone" doit être différent de "Build". -->
    <Error Text="The parameter 'Milestone' must not be set to 'Build'."
           Condition="'$(Milestone)' == 'Build'" />
  </Target>

  <!--
  <Target Name="_PreIntegrate">
    <PropertyGroup>
      <PackageTarget>Integration</PackageTarget>
    </PropertyGroup>
  </Target>
  -->

  <Target Name="_ZipPackage" DependsOnTargets="CreatePackageDir;GetVersionNumber">
    <PropertyGroup>
      <_PackageFile>$(_PackageDir)chiffon-$(_VersionNumber)-$(PackageTarget).7z</_PackageFile>
    </PropertyGroup>

    <Delete Files="$(_PackageFile)" />
    <Exec Command="$(_SevenZipExe) -mx9 a $(_PackageFile) $(_StageDir)*" ContinueOnError="false"/>
  </Target>

</Project>
