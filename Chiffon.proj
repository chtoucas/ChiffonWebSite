<?xml version="1.0" encoding="utf-8" ?>
<!-- Cf.
  * http://blogs.msdn.com/b/webdev/archive/2013/09/22/web-publish-how-to-automate-multi-project-publish-with-file-system.aspx
  * https://github.com/sayedihashimi/publish-samples
  * http://www.hanselman.com/blog/TinyHappyFeatures3PublishingImprovementsChainedConfigTransformsAndDeployingASPNETAppsFromTheCommandLine.aspx
  * http://www.asp.net/mvc/tutorials/deployment/visual-studio-web-deployment/deploying-extra-files
  * http://msdn.microsoft.com/en-us/library/ee942158.aspx
  * http://stackoverflow.com/questions/11198252/msbuild-task-with-aftertargets-to-encrypt-web-config-after-transform
  TODO:
  * encrypter les chaînes de connection
  * permettre de ne sélectionner qu'une partie des projets
  * add custom deploy script
  -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project=".\libexec\Chiffon.Common.Targets" />
  <Import Project=".\libexec\Chiffon.Tasks.Targets" />

  <!-- Macros -->

  <PropertyGroup>
    <!-- On force la valeur de VisualStudioVersion.
      TODO: Comme cela n'est nécessaire que pour la cible Publish, on devrait peut-être
            ne pas le faire dans tous les cas. -->
    <VisualStudioVersion>11.0</VisualStudioVersion>
    <Configuration Condition="$(Configuration) == ''">Release</Configuration>
    <Platform Condition="$(Platform) == ''">Any CPU</Platform>

    <MinifyOnly Condition="$(MinifyOnly) != 'true'">false</MinifyOnly>
    <VerifyAssemblies Condition="$(VerifyAssemblies) != 'true'">false</VerifyAssemblies>

    <!-- Valeurs possibles : Major, Minor, Patch, Override -->
    <BuildRevision Condition="$(BuildRevision) == ''">Override</BuildRevision>

    <!-- Aujourd'hui, on a une seule valeur possible pour PublishTarget: Production -->
    <PublishTarget Condition="$(PublishTarget) == ''">Production</PublishTarget>

    <ConfigDir>$(BaseDir)\intern\config\$(PublishTarget)</ConfigDir>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Configuration de la compilation -->
    <BuildProperties>
      Configuration=$(Configuration);
      OutDir=$(OutDir);
      Platform=$(Platform)
    </BuildProperties>

    <!-- Configuration de la publication dans le système de fichiers -->
    <PublishProperties>
      $(BuildProperties);
      <!-- Configuration de MSBuild -->
      OutputPath=$(OutDir);
      DeployOnBuild=true;
      VisualStudioVersion=$(VisualStudioVersion);
      ConfigDir=$(ConfigDir);
      <!-- Configuration commune à tous les profils de publication -->
      WebPublishMethod=FileSystem;
      DeleteExistingFiles=true;
      DebugSymbols=true;
      ExcludeApp_Data=true;
      PrecompileBeforePublish=true;
      EnableUpdateable=false;
      DeployTarget=WebPublish;
      WDPMergeOption=MergeAllOutputsToASingleAssembly;
      UseMerge=true;
      DeleteAppCodeCompiledFiles=true
    </PublishProperties>

    <!-- Configuration de la minification -->
    <MinifyProperties>
      YuiCompressorJar=$(YuiCompressorJar);
      GoogleClosureJar=$(GoogleClosureJar)
    </MinifyProperties>
  </PropertyGroup>

  <!-- Liste des projets à compiler -->

  <ItemGroup>
    <ProjectsToBuild Include="$(SourceDir)\Chiffon.WebSite\assets\Chiffon.Assets.proj">
      <AdditionalProperties>
        $(MinifyProperties)
      </AdditionalProperties>
    </ProjectsToBuild>
    <ProjectsToBuild Include="$(BaseDir)\Chiffon.sln" Condition="$(MinifyOnly) != 'true'" />
  </ItemGroup>

  <!-- Liste des projets à publier -->

  <ItemGroup>
    <ProjectsToPublish Include="$(SourceDir)\Chiffon.WebSite\assets\Chiffon.Assets.proj">
      <AdditionalProperties>
        $(MinifyProperties);
        $(PublishProperties);
        publishUrl=$(PublishDir)\wznw.org_chiffon\
      </AdditionalProperties>
    </ProjectsToPublish>

    <ProjectsToPublish Include="$(SourceDir)\Chiffon.WebSite\Chiffon.WebSite.csproj">
      <AdditionalProperties>
        $(PublishProperties);
        publishUrl=$(PublishDir)\pourquelmotifsimone.com\;
        PublishProfile=$(PublishProfilesDir)\Chiffon.WebSite.$(PublishTarget).pubxml
      </AdditionalProperties>
    </ProjectsToPublish>

    <ProjectsToPublish Include="$(SourceDir)\Chiffon.StaticSite\Chiffon.StaticSite.csproj">
      <AdditionalProperties>
        $(PublishProperties);
        publishUrl=$(PublishDir)\s.pourquelmotifsimone.com\;
        PublishProfile=$(PublishProfilesDir)\Chiffon.StaticSite.$(PublishTarget).pubxml
      </AdditionalProperties>
    </ProjectsToPublish>
  </ItemGroup>

  <!-- Cibles publiques -->

  <Target Name="Clean">
    <RemoveDir Directories="$(OutDir)" Condition="Exists($(OutDir))" />
    <RemoveDir Directories="$(PublishDir)" Condition="Exists($(PublishDir))" />
    <MSBuild Projects="@(ProjectsToBuild)" Targets="Clean" Properties="$(BuildProperties)"/>
  </Target>

  <Target Name="Build">
    <MSBuild Projects="@(ProjectsToBuild)" Properties="$(BuildProperties);SemVer=$(SemVer)"/>
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <!-- Publication vers le système de fichier -->
  <Target Name="Publish" DependsOnTargets="Clean">
    <MSBuild Projects="@(ProjectsToPublish)" Properties="SemVer=$(SemVer)" />
  </Target>

  <Target Name="Package" DependsOnTargets="Publish">
    <PropertyGroup>
      <_PackageFile>$(PackageDir)\chiffon-$(SemVer)-$(PublishTarget).7z</_PackageFile>
    </PropertyGroup>

    <Delete Files="$(_PackageFile)" />
    <Exec Command="$(SevenZipExe) -mx9 a $(_PackageFile) $(PublishDir)\*" ContinueOnError="false"/>
  </Target>

  <!-- Cibles privées -->

  <Target Name="_PrepareForBuild" BeforeTargets="Build">
    <MakeDir Directories="$(OutDir)"  Condition="!Exists($(OutDir))" />
  </Target>

  <Target Name="_PrepareForPublish" BeforeTargets="Publish">
    <MakeDir Directories="$(PublishDir)"  Condition="!Exists($(PublishDir))" />
  </Target>

  <Target Name="_PrepareForPackage" BeforeTargets="Package">
    <MakeDir Directories="$(PackageDir)"  Condition="!Exists($(PackageDir))" />
  </Target>

  <Target Name="_VerifyAssemblies" AfterTargets="Publish" Condition="$(VerifyAssemblies) == 'true'">
    <ItemGroup>
      <_BinaryFiles Include="$(PublishDir)\**\Chiffon.*.dll"
                    Exclude="$(PublishDir)\**\Chiffon.*.AspNet.dll" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(_BinaryFiles)">
      <Output TaskParameter="Filtered" ItemName="_AssemblyFiles"/>
    </RemoveDuplicates>

    <Exec Command="$(PEVerifyExe) $(PEVerifyArgs) %(_AssemblyFiles.FullPath)"
          ContinueOnError="false" />
  </Target>

  <Target Name="_UpdateVersionNumber" BeforeTargets="Build;Publish;Package">
    <UpdateVersion
      VersionInfoXml="$(EtcDir)\VersionInfo.xml"
      AssemblyInfoTemplate="$(EtcDir)\AssemblyInfo.Template.cs"
      AssemblyInfoFile="$(EtcDir)\AssemblyInfo.Version.cs"
      BuildRevision="$(BuildRevision)">
    </UpdateVersion>
    <GetSemVer VersionInfoXml="$(EtcDir)\VersionInfo.xml">
      <Output PropertyName="SemVer" TaskParameter="SemVer" />
    </GetSemVer>
  </Target>

  <Target Name="_PrepareForPEVerify" BeforeTargets="_PEVerify">
    <!--
    <GetFrameworkSdkPath>
      <Output TaskParameter="FrameworkSdkVersion40Path" PropertyName="SDKPath" />
    </GetFrameworkSdkPath>
    -->
    <PropertyGroup>
      <SDK40ToolsPath>C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\NETFX 4.0 Tools</SDK40ToolsPath>
      <PEVerifyExe>"$(SDK40ToolsPath)\peverify.exe"</PEVerifyExe>
      <PEVerifyArgs>/il /md /nologo</PEVerifyArgs>
    </PropertyGroup>
  </Target>
</Project>
